{
  "name": "5. Multi Agent Workflow",
  "nodes": [
    {
      "parameters": {
        "sendTo": "={{ $fromAI(\"emailAddress\") }}",
        "subject": "={{ $fromAI(\"subject\") }}",
        "message": "={{ $fromAI(\"emailBody\") }}",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        656,
        -6192
      ],
      "id": "7d5d7142-5c45-427d-a3fc-3acab86797ec",
      "name": "Send Email",
      "webhookId": "86c8c4b1-13bb-4ebe-acb9-30e1d7082d55"
    },
    {
      "parameters": {
        "operation": "reply",
        "messageId": "={{ $fromAI(\"ID\",\"the message ID\") }}",
        "message": "={{ $fromAI(\"emailBody\") }}",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        768,
        -6192
      ],
      "id": "7404e362-1901-4fbb-94fe-bf1e8b3d5b32",
      "name": "Email Reply",
      "webhookId": "114785e6-a859-432b-81b4-c490c1c35b1c"
    },
    {
      "parameters": {
        "operation": "addLabels",
        "messageId": "={{ $fromAI(\"ID\",\"the ID of the message\") }}",
        "labelIds": "={{ $fromAI(\"labelID\") }}"
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        896,
        -6192
      ],
      "id": "53c09c70-448a-459a-9791-644083df1a7c",
      "name": "Label Emails",
      "webhookId": "0e951529-2e6d-40bf-ac40-fc0947e242e2"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        528,
        -6192
      ],
      "id": "9d633a62-fe67-4f2e-874b-ac19dc5ef93b",
      "name": "4.1-mini"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.query }}",
        "options": {
          "systemMessage": "=# Overview\nYou are an email management assistant. All emails must be formatted professionally in HTML and signed off as \"Nate.\" \n\n**Email Management Tools**   \n   - Use \"Send Email\" to send emails.  \n   - Use \"Create Draft\" if the user asks for a draft.  \n   - Use \"Get Emails\" to retrieve emails when requested.\n   - Use \"Get Labels\" to retrieve labels.\n   - Use \"Mark Unread\" to mark an email as unread. You must use \"Get Emails\" first so you have the message ID of the email to flag.\n   - Use \"Label Email\" to flag an email. You must use \"Get Emails\" first so you have the message ID of the email to flag. Then you must use \"Get Labels\" so you have the label ID.\n   - Use \"Email Reply\" to reply to an email. You must use \"Get Emails\" first so you have the message ID of the email to reply to.\n\n## Final Notes\n- Here is the current date/time: {{ $now }}"
        }
      },
      "id": "d5f21de0-9da2-4ff6-9768-e2a93e710264",
      "name": "Email Agent1",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        608,
        -6400
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "nateherk88@gmail.com",
          "mode": "list",
          "cachedResultName": "nateherk88@gmail.com"
        },
        "start": "={{ $fromAI(\"eventStart\") }}",
        "end": "={{ $fromAI(\"eventEnd\") }}",
        "additionalFields": {
          "attendees": [
            "={{ $fromAI(\"eventAttendeeEmail\") }}"
          ],
          "summary": "={{ $fromAI(\"eventTitle\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        1392,
        -6080
      ],
      "id": "9bf1a75f-ed4d-40b3-a8f1-442b3042d0ab",
      "name": "Create Event with Attendee"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "nateherk88@gmail.com",
          "mode": "list",
          "cachedResultName": "nateherk88@gmail.com"
        },
        "start": "={{ $fromAI(\"eventStart\") }}",
        "end": "={{ $fromAI(\"eventEnd\") }}",
        "additionalFields": {
          "attendees": [],
          "summary": "={{ $fromAI(\"eventTitle\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        1264,
        -6080
      ],
      "id": "a23c6045-f2c5-4a25-8ea6-84fe69030930",
      "name": "Create Event"
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "nateherk88@gmail.com",
          "mode": "list",
          "cachedResultName": "nateherk88@gmail.com"
        },
        "timeMin": "={{ $fromAI(\"dayBefore\",\"the day before the date the user requested\") }}",
        "timeMax": "={{ $fromAI(\"dayAfter\",\"the day after the date the user requested\") }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        1152,
        -6080
      ],
      "id": "14ec2054-c5bc-4e35-8463-56a89e513d8e",
      "name": "Get Events"
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "nateherk88@gmail.com",
          "mode": "list",
          "cachedResultName": "nateherk88@gmail.com"
        },
        "eventId": "={{ $fromAI(\"eventID\") }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        1392,
        -6208
      ],
      "id": "be0c07ec-8165-4fc7-8eee-ee1995d97dfa",
      "name": "Delete Event"
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "nateherk88@gmail.com",
          "mode": "list",
          "cachedResultName": "nateherk88@gmail.com"
        },
        "eventId": "={{ $fromAI(\"eventID\") }}",
        "updateFields": {
          "end": "={{ $fromAI(\"endTime\") }}",
          "start": "={{ $fromAI(\"startTime\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        1264,
        -6208
      ],
      "id": "9250af76-dfb5-4322-bf1c-2c4f5d1eeaf0",
      "name": "Update Event"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.query }}",
        "options": {
          "systemMessage": "=# Overview\nYou are a calendar assistant. Your responsibilities include creating, getting, and deleting events in the user's calendar.\n\n**Calendar Management Tools**  \n   - Use \"Create Event with Attendee\" when an event includes a participant.  \n   - Use \"Create Event\" for solo events.   \n   - Use \"Get Events\" to fetch calendar schedules when requested.\n   - Use \"Delete Event\" to delete an event. You must use \"Get Events\" first to get the ID of the event to delete.\n   - Use \"Update Event\" to update an event. You must use \"Get Events\" first to get the ID of the event to update.\n\n## Final Notes\nHere is the current date/time: {{ $now }}\nIf a duration for an event isn't specified, assume it will be one hour."
        }
      },
      "id": "943658ec-55bf-4597-9808-e306b304e7da",
      "name": "Calendar Agent1",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        1168,
        -6416
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1152,
        -6208
      ],
      "id": "eb9d1b6b-c6d3-4675-bc35-438d4c8e1072",
      "name": "4.1-mini1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": "=# Overview\nYou are the ultimate personal assistant. Your job is to send the user's query to the correct tool. You should never be writing emails, or creating even summaries, you just need to call the correct tool.\n\n## Tools\n- Think: Use this to think deeply or if you get stuck\n- emailAgent: Use this tool to take action in email\n- calendarAgent: Use this tool to take action in calendar\n- contactAgent: Use this tool to get, update, or add contacts\n- contentCreator: Use this tool to create blog posts\n- Tavily: Use this tool to search the web\n\n## Rules\n- Some actions require you to look up contact information first. For the following actions, you must get email address and send that to the agent who needs it:\n  - sending emails\n  - drafting emails\n  - creating calendar event with attendee\n\n## Instructions\n1) Call the neccessary tools based on the user request\n2) Use the \"Think\" tool to verify you took the right steps. This tool should be called every time.\n\n\n## Examples\n1) \n- Input: send an email to nate herkelman asking him what time he wants to leave\n  - Action: Use contactAgent to get nate herkelman's email\n  - Action: Use emailAgent to send the email. You will pass the tool a query like \"send nate herkelman an email to ask what time he wants to leave. here is his email: [email address]\n- Output: The email has been sent to Nate Herkelman. Anything else I can help you with?\n\n\n## Final Reminders\nHere is the current date/time: {{ $now }}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        960,
        -6816
      ],
      "id": "b1aced7e-0be2-44db-8f0e-ecafd98b2b3f",
      "name": "Ultimate Assistant"
    },
    {
      "parameters": {
        "name": "emailAgent",
        "description": "Call this tool for any email actions.",
        "workflowId": {
          "__rl": true,
          "value": "C3hLlOS4O6ZJtVFy",
          "mode": "list",
          "cachedResultName": "🤖Email Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        704,
        -6528
      ],
      "id": "09f6b466-bc39-4d26-9b46-825c11b6685d",
      "name": "Email Agent"
    },
    {
      "parameters": {
        "name": "calendarAgent",
        "description": "Call this tool for any calendar action.",
        "workflowId": {
          "__rl": true,
          "value": "0NtlJ41IozGhtFa6",
          "mode": "list",
          "cachedResultName": "🤖Calendar Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        1328,
        -6528
      ],
      "id": "7fe89732-3dbe-44b2-ba8b-109679878de2",
      "name": "Calendar Agent"
    },
    {
      "parameters": {
        "content": "# Parent Agent\n\n",
        "height": 260,
        "width": 420,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        880,
        -6928
      ],
      "typeVersion": 1,
      "id": "b513edee-61b3-4dc5-8761-aa4a68e9de86",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        144,
        -6416
      ],
      "id": "3b042ab2-d361-43d0-822a-1e1f8598df65",
      "name": "GPT 4.1"
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "id": "4581c3de-cf36-4cf7-94a2-5f93aa92543e",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        160,
        -6816
      ],
      "webhookId": "99eab1a0-569d-4f0f-a49e-578a02abfe63"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fe7ecc99-e1e8-4a5e-bdd6-6fce9757b234",
              "name": "text",
              "value": "={{ $json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "59e084cb-3232-4151-bf74-89cc33429867",
      "name": "Set 'Text'",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        544,
        -6800
      ]
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}",
        "additionalFields": {}
      },
      "id": "0ab47295-a13a-4b71-8ff3-172238eff91d",
      "name": "Download Voice File",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        480,
        -6960
      ],
      "webhookId": "c0b376b1-7b63-41b6-8063-0b3096b8333d"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "6f900446-5284-4423-9b3c-0bdcaa920ef4",
      "name": "Transcribe Audio",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        640,
        -6960
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Voice"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8c844924-b2ed-48b0-935c-c66a8fd0c778",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            }
          ]
        },
        "options": {}
      },
      "id": "ce9cb9d0-e991-423e-94eb-a46b23da5d03",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        304,
        -6816
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "0d13a667-70a3-4efb-8191-9cf447a40e7a",
      "name": "Response",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1376,
        -6816
      ],
      "webhookId": "682ca5ab-d30c-4ea5-bb25-c2f26206e761"
    },
    {
      "parameters": {
        "content": "# Email Agent",
        "height": 700,
        "width": 540,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        464,
        -6560
      ],
      "id": "1479731c-74e8-450b-a620-abd6cd0d8b18",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "# Calendar Agent",
        "height": 700,
        "width": 540,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1056,
        -6560
      ],
      "id": "08cd6878-c32b-4228-a26a-664785516e5a",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "# 🧠 Understanding Multi-Agent Architectures in n8n\n\nWelcome to the world of **Multi-Agent AI Systems** in n8n. This guide gives you a quick overview of the most powerful agent patterns you can use to scale your automations, followed by a deep-dive into the **Hierarchical Agent Architecture** — one of the most advanced and scalable designs.\n\n---\n\n## 🧩 Core Multi-Agent Architectures\n\nHere are the 4 foundational patterns every AI builder should know:\n\n---\n\n### 🔗 1. Chain of Agents  \n**Linear flow** where each agent improves the output from the previous one.  \n*Use case:* Draft → Edit → Summarize content.\n\n> 📌 Example: Agent A writes a blog → Agent B polishes it → Agent C summarizes key points.\n\n---\n\n### ⚖️ 2. Parallel Agents  \n**Simultaneous execution** where agents work on the same input but from different angles.  \n*Use case:* Diverse opinions, A/B testing, sentiment split.\n\n> 📌 Example: Agent A gives optimistic view → Agent B gives critical view → Agent C gives a summary.\n\n---\n\n### 🧠 3. Controller Agent  \n**Smart router** that inspects input and delegates to the most relevant agent based on intent.  \n*Use case:* Chatbots, virtual assistants, task dispatchers.\n\n> 📌 Example: \"What’s 45% of 120?\" → Controller sends to Math Agent.  \n> \"Summarize this article.\" → Controller sends to Content Agent.\n\n---\n\n### 🔁 4. Feedback Loop Agent  \n**Self-improving agent** where output is evaluated and refined until it meets quality standards.  \n*Use case:* Content QA, auto-correction, multi-round generation.\n\n> 📌 Example: Agent writes a bio → Evaluator scores it → If not good, Optimizer rewrites it → loop continues until quality passes.\n\n---\n\n## 🧠 Hierarchical Agent Architecture – The Next Level\n\nThe **Hierarchical Agent Architecture** builds on all previous models, but adds **structure, control, and modularity**.\n\n---\n\n### 🧭 What Is It?\n\nA **Parent Agent** acts as a central decision-maker. It receives input, understands context, and delegates tasks to **specialized child agents**, each designed to handle specific types of queries or jobs.\n\n---\n\n### 🛠 How It Works in n8n\n\nThere are **two main ways** to implement it:\n\n---\n\n#### 1. 🔁 Execute Workflow (Sub-Agent Calls)\nEach child agent is a **separate n8n workflow**. The parent agent uses an `Execute Workflow` node to call the appropriate sub-agent when needed.\n\n- ✅ Modular and testable\n- ✅ Easy to maintain\n- ✅ Best for teams or shared components\n\n---\n\n#### 2. 🧠 Tool-Based Agents (Native Agent Structure)\nWith n8n's AI Agent UI (2024+), you can define:\n\n- A **Parent Agent**\n- A set of **Child Agents** with individual Chat Models, Tools, and Memory\n- Each child can be invoked dynamically by the parent based on input\n\n- ✅ Works well with shared memory\n- ✅ Better for real-time assistant-style tasks\n- ✅ Can simulate multi-turn conversation and recursive planning\n\n---\n\n### 🌐 Real-World Use Case\n\n#### Virtual Assistant Bot\n\n| Input Type | Delegated To |\n|------------|---------------|\n| \"Send an email to John\" | 📩 Email Agent |\n| \"Schedule a meeting tomorrow\" | 🗓 Calendar Agent |\n| \"Add Jane’s phone number to my contacts\" | 👤 Contact Agent |\n| \"Write a tweet about AI automation\" | ✍️ Content Creator Agent |\n\nThe **Parent Agent** listens to the input, detects the intent, and sends it to the right sub-agent.\n\n---\n\n### ✅ Key Benefits of Hierarchical Design\n\n- ✅ **Modular & Maintainable** – Each agent can evolve independently.\n- ✅ **Easier to Debug** – Isolate issues in specific workflows.\n- ✅ **Scalable** – Add new agents without breaking existing ones.\n- ✅ **Memory-Ready** – Shared or scoped memory per agent or task.\n- ✅ **Production-Grade Architecture** – Mirrors how real-world assistants like GPTs and AutoGPTs function.\n\n---\n\n## ✨ Final Thoughts\n\nHierarchical agent systems are your gateway to building **truly intelligent AI assistants** — ones that can analyze, decide, delegate, improve, and even collaborate internally.\n\nWhether you’re automating calendars, emails, customer service, or content, structuring your workflows this way will keep your system clean, testable, and infinitely scalable.\n\n---\n\n### 🔗 Connect with Me\n\nWant to learn more or watch me build agent systems live?\n\n📺 **YouTube** → [@tech.mayankagg](https://www.youtube.com/@tech.mayankagg)  \n💼 **LinkedIn** → [Mayank Agarwal](https://www.linkedin.com/in/mayank953/)  \n📸 **Instagram** → [@tech.mayankagg](https://www.instagram.com/tech.mayankagg/)\n\n---\n\n*Created by Mayank Agarwal – Helping you build powerful, modular AI automation using n8n.*\n",
        "height": 3136,
        "width": 3120
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -160,
        -10192
      ],
      "typeVersion": 1,
      "id": "d84a13f4-8022-4e50-8e16-04458809119a",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "## 🧰 Features & Use Cases of Hierarchical Agent Systems\n\nOnce you set up a **Hierarchical Agent System** in n8n, you unlock a whole new level of capability and control.\n\nThis setup isn’t just a fancy design — it’s a **smarter way to build AI assistants** that think, decide, and act like a real team of specialists under one manager.\n\nLet’s explore the features and where these systems shine best 👇\n\n---\n\n### 🎯 Key Features That Make Hierarchical Agents Powerful\n\n---\n\n### 🧩 1. Modular by Design\n\nEach agent is self-contained. You can test, replace, or improve them without affecting others.\n\n> **Example:**  \nYou want to improve how the `Email Agent` handles drafts.  \nJust update that one — no changes needed to the Parent Agent or Calendar Agent.\n\n---\n\n### 🧠 2. Smarter Decision-Making\n\nThe parent agent doesn’t just forward messages — it **analyzes context**, figures out intent, and routes it intelligently.\n\n> **Example:**  \n“Reschedule my call with Sarah” → Sent to **Calendar Agent**  \n“Write a thank-you email to the team” → Sent to **Email Agent**\n\n---\n\n### ♻️ 3. Reusable Components\n\nBecause each agent is separate, you can reuse them in other workflows.\n\n> **Example:**  \nYour `Content Creator Agent` can be used in:\n- Marketing automation\n- Blog creation bots\n- LinkedIn post generators\n\nOne build = multiple use cases.\n\n---\n\n### 📈 4. Scalability Without Chaos\n\nAs your system grows, you simply register more agents into the parent flow. No need to rewire your workflow from scratch.\n\n> **Example:**  \nAdd a **Finance Agent** later — just plug it into the parent’s logic. The rest of the workflow remains untouched.\n\n---\n\n### 🧠 5. Memory and Multi-Turn Ready\n\nEach agent can have its **own memory**, or you can use **shared memory** through tools like Pinecone, Redis, or n8n’s native memory.\n\n> **Example:**  \nYour `Contact Agent` can remember recent additions, while your `Calendar Agent` stores past meetings — enabling rich, contextual conversations.\n\n---\n\n### 📦 Where to Use Hierarchical Agents\n\n---\n\n#### ✅ Personal AI Assistants\n> *“Remind me to email Alex tomorrow and check my next meeting.”*\n\nSplit across Email Agent + Calendar Agent.\n\n---\n\n#### ✅ AI Ops or Admin Bots\n> *“Get me the list of overdue tasks and schedule a call with the client.”*\n\nSub-agents: Project Tracker + Calendar Agent.\n\n---\n\n#### ✅ Customer Service & Helpdesk\n> *“I want to update my contact info and reschedule my demo.”*\n\nSub-agents: CRM Agent + Calendar Agent\n\n---\n\n#### ✅ Creator & Content Teams\n> *“Draft a YouTube description and schedule it for Friday.”*\n\nSub-agents: Content Writer Agent + Publishing Scheduler Agent\n\n---\n\n#### ✅ Executive Dashboards or Chief-of-Staff AI\nA single parent agent can handle:\n- Scheduling\n- Inbox triage\n- Research\n- Report generation\n- Reminders\n\nJust like a real executive assistant — but smarter, faster, and always on.\n\n---\n\n### 🔗 Connect with Me\n\nWant to build your own AI assistant using hierarchical agents in n8n?\n\n📺 **YouTube** → [@tech.mayankagg](https://www.youtube.com/@tech.mayankagg)  \n💼 **LinkedIn** → [Mayank Agarwal](https://www.linkedin.com/in/mayank953/)  \n📸 **Instagram** → [@tech.mayankagg](https://www.instagram.com/tech.mayankagg/)\n\n---\n\n*Shared by Mayank Agarwal – Helping you build smart, scalable AI systems using n8n and LLMs.*\n\n",
        "height": 2768,
        "width": 1296
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -400,
        -5744
      ],
      "typeVersion": 1,
      "id": "9dee8009-4e6f-45b7-83ce-e656fef594be",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.prompt }}",
        "options": {
          "systemMessage": "=You are Shabbir Nooruddin's personal assistant. Your job is to make his life easier by being the source of information and execution for a large chunk of his daily tasks.\n\nThe current time is {{ $now }}.\n\nThese include:\n- News\n- Weather\n- Travel information\n- Managing email\n- Creating blog posts\n- Keeping track of expenses\n- Personal Calendar\n- Checking the social media calendar\n\nWEATHER AND NEWS\n----------------\nWhen asked about the weather or news, call the weather and news agent.\n\nFor news, prioritize the most recent stories and just output the headline and a brief summary.\n\nFor weather, only provide temperature, heat index or wind chill, and precipitation. Provide sunrise, sunset, moonrise, moonset if asked.\n\nTRAVEL INFORMATION\n-----------------\nUse the flights and hotel agent to find suitable flights or hotels for my query. Unless I specify otherwise, assume it's economy, one way, use the biggest airport in the city, and as few stops as possible.\n\nMANAGING EMAIL\n---------------\nYou have full access to all of my email and all functions. Assist me however I need. If I ask you to draft an email, confirm the draft with me before you send it. If I don't provide you with an email address, use the Contacts tool to find it, and confirm before sending. If you don't find it, ask me to provide it.\n\nMANAGING EXPENSES\n-----------------\nI will tell you to log or retrieve expenses. Use the finance tracker agent to add expenses or retrieve any information I request. Expense format to add: currency, amount, type - nothing else needed unless I specify.\n\nDEEP RESEARCH\n--------------\nI will ask you any question about anything. Use the deep research agent and retrieve information request. If I specify(don't ask), do deeper research.\n\nCALENDAR\n--------\nUse the Calendar Tool to help me keep track of meetings, book new ones, and manage existing ones. If I ask you to book a meeting with someone, try to find their info using the Contacts tool. If you're unable to find it, ask me for it.\n\nSOCIAL MEDIA CALENDAR\n---------------\nUse the Social Media Calendar tool to retrieve Instagram, LinkedIn, and Tiktok content ideas and suggested frameworks. The Calendar tool must use its own Airtable search tools to find content ideas from MY EXISTING research database.\n\nI will either reject the idea or tell you which framework to choose - send that back to the social media calendar tool and it will take care of the rest. then get back to me with the confirmation you get from the social calendar tool.\n\nCONTENT WRITING\n--------------\nUse the create content tool to write blog posts. I will tell you a topic. Use the tool to write the content. The tool will return a fully formatted blog post, which you are to use the Google Docs tool to generate a new document and reply with the shareable URL.\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        560,
        -2192
      ],
      "id": "3ccd0509-f920-4d8f-bf65-fe0e19acea28",
      "name": "Orchestrator Agent"
    },
    {
      "parameters": {
        "toolDescription": "AI agent to do reseearch on various topics.",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {
          "systemMessage": "You have access to the Tavily Tool and Perplexity Tool to research various topics. Use them!\n\nIf the topic requires MORE in-depth research, use the In-Depth Research Tool."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        1152,
        -416
      ],
      "id": "ab0ef009-fe4a-4c84-8501-9848b5616707",
      "name": "Research Agent"
    },
    {
      "parameters": {
        "toolDescription": "Searches tavily for relevant information and sources",
        "method": "POST",
        "url": "https://api.tavily.com/search",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"query\": \"{{ $fromAI(\"search_topic\")}}\",\n  \"auto_parameters\": false,\n  \"topic\": \"general\",\n  \"search_depth\": \"basic\",\n  \"chunks_per_source\": 3,\n  \"max_results\": 3,\n  \"include_answer\": true,\n  \"include_raw_content\": true,\n  \"include_images\": false,\n  \"include_image_descriptions\": false,\n  \"include_favicon\": false,\n  \"include_domains\": [],\n  \"exclude_domains\": [],\n  \"country\": null\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1184,
        -224
      ],
      "id": "c05d1767-2d8e-4ead-b455-61b9ecfa7ef6",
      "name": "Tavily Research"
    },
    {
      "parameters": {
        "model": "sonar-pro",
        "messages": {
          "message": [
            {
              "content": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('message0_Text', ``, 'string') }}"
            }
          ]
        },
        "options": {},
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.perplexityTool",
      "typeVersion": 1,
      "position": [
        1344,
        -240
      ],
      "id": "7497f818-8344-449b-af31-c5d4bb3e18ba",
      "name": "Message a model in Perplexity"
    },
    {
      "parameters": {
        "toolDescription": "in depth research",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        1600,
        -336
      ],
      "id": "147d8908-563a-4925-adcf-2e5e16dd0b55",
      "name": "In-Depth Research Tool"
    },
    {
      "parameters": {
        "model": "sonar-deep-research",
        "messages": {
          "message": [
            {
              "content": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('message0_Text', ``, 'string') }}"
            }
          ]
        },
        "options": {},
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.perplexityTool",
      "typeVersion": 1,
      "position": [
        1856,
        -224
      ],
      "id": "e3cd2b64-5081-405c-98bd-efc7b2be5759",
      "name": "Message a model in Perplexity1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "claude-sonnet-4-20250514",
          "cachedResultName": "Claude 4 Sonnet"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.3,
      "position": [
        -480,
        32
      ],
      "id": "faa5b5a0-ed38-477e-9f61-c2ac6eadee6d",
      "name": "Anthropic Chat Model"
    },
    {
      "parameters": {
        "toolDescription": "Research AI agent that uses tavily and perplexity to get information about a topic",
        "text": "=You are an expert at researching for writing website content and blog posts. I will provide you with a topic, and you are to use the Perplexity tool and autocomplete suggestions tools to help me craft an engaging title and H2 - H3 structure for the blog post. Your output should be: Title, up to 3 x H2s and nested H3s, nothing else.\n\nThe final H2 should be a conclusion.\n\nTopic: {{ $fromAI(\"search_query\") }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        816,
        -1424
      ],
      "id": "33a4d66d-ede8-40d0-a68b-40e17415f619",
      "name": "Titles and Structure Tool"
    },
    {
      "parameters": {
        "model": "sonar-pro",
        "messages": {
          "message": [
            {
              "content": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('message0_Text', ``, 'string') }}"
            }
          ]
        },
        "options": {},
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.perplexityTool",
      "typeVersion": 1,
      "position": [
        832,
        -1200
      ],
      "id": "b9e8a64b-cadd-40e0-a419-9990fbb352dd",
      "name": "Perplexity Tool"
    },
    {
      "parameters": {
        "toolDescription": "Write blog post section tool",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        1168,
        -1312
      ],
      "id": "b663c5a4-c7cb-4660-a32e-63d172e3ecc1",
      "name": "Write Section Tool"
    },
    {
      "parameters": {
        "toolDescription": "Use replicate to generate an image",
        "method": "POST",
        "url": "https://api.replicate.com/v1/models/black-forest-labs/flux-schnell/predictions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"input\": {\n      \"prompt\": \"{{ $fromAI(\"prompt\") }}\",\n      \"go_fast\": true,\n      \"megapixels\": \"1\",\n      \"num_outputs\": 1,\n      \"aspect_ratio\": \"1:1\",\n      \"output_format\": \"webp\",\n      \"output_quality\": 80,\n      \"num_inference_steps\": 4\n    }\n  }",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1568,
        -1216
      ],
      "id": "e4b01866-aa8f-4ea2-a7ec-4f03518317bb",
      "name": "Generate Image"
    },
    {
      "parameters": {
        "toolDescription": "Check status of generated image",
        "url": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('URL', ``, 'string') }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1728,
        -1232
      ],
      "id": "544ea163-c3ee-4740-82be-9c5ee8487329",
      "name": "Check Status"
    },
    {
      "parameters": {
        "toolDescription": "AI agent that can generate images",
        "text": "=You are an expert at crafting prompts for AI-powered image generation models.\n\nThis is the topic my article is about: {{ $fromAI(\"topic\") }}\n\nThis is the image style:\n{{ $fromAI(\"style\") }}\n\nUse the Replicate Generate Image tool to start the image generation process. Then use the Get Image(use the urls.get field to check) and keep checking until the status is complete, and once complete, return the image URL.",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        1504,
        -1408
      ],
      "id": "bec91708-333e-4eeb-a8de-cda215286ca8",
      "name": "Generate Image Tool"
    },
    {
      "parameters": {
        "toolDescription": "Get autocomplete suggestions",
        "url": "=https://serpapi.com/search.json?engine=google_autocomplete&q={{ $fromAI(\"keyword_as_searched_by_user\") }}&api_key=a60317e455992230c808d2c9028f2d634c4758d691e9729b1d3c6075ed20736f",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        736,
        -1200
      ],
      "id": "291b0841-c5d7-4bee-9978-4faf6ac6c038",
      "name": "Autocomplete Suggestions"
    },
    {
      "parameters": {
        "toolDescription": "Write Blog Posts",
        "text": "=You are an expert SEO content writer. You know how to research inch wide, mile deep, and you write insightful, well-researched, engaging, and READABLE content pieces about all topics.\n\nI will provide you with a keyword. Use the Generate Title and Structure tool to create a skeleton for the article.\n\nThen, write out the blog post, section by section, using the Perplexity and Tavily research tools to get data, and the Write section tool to write out each H2 section, and importantly linking out to sources wherever relevant.\n\nThen call the Generate Image tool and get the image URL - one image per blog post, to be inserted right before the first H2\n\nDo this iteratively until your output is a final, compiled, HTML-formatted blog post that's ready to publish.\n\nWorkflow:\n\n1) receive keyword\n2) generate title and structure\n3) generate introduction\n4) generate each section one-by-one\n5) Generate Image\n6) compile into ready blog post and output to user\n\nOutput format for blog post\n\n<h1>Title...</h1>\n<p>intro</p>\n<h2>heading</h2>\n<h3>heading</h3>\n<p>text</p>\netc etc",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        1184,
        -1584
      ],
      "id": "3f9c93d7-d36d-431f-af8f-aac1fee4ced6",
      "name": "Blog Post Writer"
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "appHZEVzMHF9eGIx6",
          "mode": "list",
          "cachedResultName": "Expense Tracker",
          "cachedResultUrl": "https://airtable.com/appHZEVzMHF9eGIx6"
        },
        "table": {
          "__rl": true,
          "value": "tblSi2ykaaw77cG8C",
          "mode": "list",
          "cachedResultName": "Table 1",
          "cachedResultUrl": "https://airtable.com/appHZEVzMHF9eGIx6/tblSi2ykaaw77cG8C"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        -192,
        -1360
      ],
      "id": "bb2b0b8c-ecc3-433c-8eb8-44b69923db00",
      "name": "Search Entries"
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "appHZEVzMHF9eGIx6",
          "mode": "list",
          "cachedResultName": "Expense Tracker",
          "cachedResultUrl": "https://airtable.com/appHZEVzMHF9eGIx6"
        },
        "table": {
          "__rl": true,
          "value": "tblSi2ykaaw77cG8C",
          "mode": "list",
          "cachedResultName": "Table 1",
          "cachedResultUrl": "https://airtable.com/appHZEVzMHF9eGIx6/tblSi2ykaaw77cG8C"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Expense": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Expense', ``, 'string') }}",
            "Amount": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Amount', ``, 'number') }}",
            "Category": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Category', ``, 'string') }}",
            "Date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Date', `datetime variable`, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Expense",
              "displayName": "Expense",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Amount",
              "displayName": "Amount",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Category",
              "displayName": "Category",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Date",
              "displayName": "Date",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "dateTime",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        -432,
        -1360
      ],
      "id": "0d216330-5843-4dd4-8f87-10ba020b8838",
      "name": "Create Entry"
    },
    {
      "parameters": {
        "toolDescription": "Personal Finance Tracker Agent",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {
          "systemMessage": "You are a helpful assistant for an expense tracker. First, you must determine whether the input I provide you with is adding a new entry or inquiring about existing entries.\n\nCurrency is Indian rupee or INR\n\nThe current date is {{ $now }}\n\nIf it's a new entry: Create a new entry with a corresponding category: entertainment, food, eating out, travel, transport, health, personal. Update the date field using an ISO 8601 format date, sent as a datetime variable, NOT a string.\n\nIf you receive a bunch of text from a scanned invoice, determine the date and amount and create a single entry.\n\nWhen you reply with a confirmation of an entry you made, only confirm the last successful entry, not any earlier ones. One message from you should only confirm a single transaction.\n\nIf it's an inquiry, use the search entries tool to get information and answer my question."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        -432,
        -1520
      ],
      "id": "f376d396-ce93-4643-abf5-4664ae5c0dde",
      "name": "Finance Tracker Agent"
    },
    {
      "parameters": {
        "toolDescription": "weather and news agent",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {
          "systemMessage": "You have access to two tools: SerpAPI for news and WeatherAPI for weather."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        -448,
        -1088
      ],
      "id": "5f15d279-455d-4727-94f1-e7ad48dd5f25",
      "name": "Weather and News Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -336,
        240
      ],
      "id": "18ba0803-956c-4c6a-acac-72b5dbc2fd30",
      "name": "GPT-5-Nano"
    },
    {
      "parameters": {
        "toolDescription": "SERPapi for news",
        "url": "https://serpapi.com/search?engine=google_news_light",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "serpApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "q",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Value', `the news query to search for`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        -224,
        -912
      ],
      "id": "dea26d9a-e91c-4f0b-8bfe-ce943468fd78",
      "name": "SERPapi news"
    },
    {
      "parameters": {
        "toolDescription": "Get weather information",
        "url": "http://api.weatherapi.com/v1//forecast.json",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "q",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Value', `the location (US UK CN zip code or city name)`, 'string') }}"
            },
            {
              "name": "days",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `how many days forecast required. if not specified, then blank.`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        -512,
        -912
      ],
      "id": "f9e55089-ae30-4cb0-8cc0-2e655f4fe6b0",
      "name": "Weather"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "shabbir@shabbirnoor.com",
          "mode": "list",
          "cachedResultName": "shabbir@shabbirnoor.com"
        },
        "additionalFields": {
          "attendees": [
            "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('attendees0_Attendees', ``, 'string') }}"
          ],
          "description": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Description', ``, 'string') }}",
          "location": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Location', ``, 'string') }}",
          "summary": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Summary', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        32,
        -272
      ],
      "id": "5371bb82-a377-4301-8b94-9d8c338c19ce",
      "name": "Create an event in Google Calendar"
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "shabbir@shabbirnoor.com",
          "mode": "list",
          "cachedResultName": "shabbir@shabbirnoor.com"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -112,
        -272
      ],
      "id": "94e717f5-fc84-4cdb-a9c2-97f0a69f8b5f",
      "name": "Delete an event in Google Calendar"
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "shabbir@shabbirnoor.com",
          "mode": "list",
          "cachedResultName": "shabbir@shabbirnoor.com"
        },
        "returnAll": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_All', ``, 'boolean') }}",
        "timeMin": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('After', ``, 'string') }}",
        "timeMax": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Before', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -240,
        -272
      ],
      "id": "7d773ec0-5d28-4de3-86a8-ef491ede5f9a",
      "name": "Get many events in Google Calendar"
    },
    {
      "parameters": {
        "operation": "get",
        "calendar": {
          "__rl": true,
          "value": "shabbir@shabbirnoor.com",
          "mode": "list",
          "cachedResultName": "shabbir@shabbirnoor.com"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -384,
        -272
      ],
      "id": "52ae1168-964a-45de-a2a0-8b584334cd50",
      "name": "Get an event in Google Calendar"
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "shabbir@shabbirnoor.com",
          "mode": "list",
          "cachedResultName": "shabbir@shabbirnoor.com"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "useDefaultReminders": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Use_Default_Reminders', ``, 'boolean') }}",
        "updateFields": {
          "description": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Description', ``, 'string') }}",
          "summary": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Summary', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -528,
        -272
      ],
      "id": "1ed143aa-63c3-4a2b-9cd2-fb38ee7276ab",
      "name": "Update an event in Google Calendar"
    },
    {
      "parameters": {
        "toolDescription": "email management tool",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        208,
        -1568
      ],
      "id": "75ca4329-b439-4614-add8-4287ad57e730",
      "name": "Email Management Agent"
    },
    {
      "parameters": {
        "content": "## Travel Agent",
        "height": 416,
        "width": 944,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1024,
        -16
      ],
      "typeVersion": 1,
      "id": "247fd61e-56ce-49bd-9fff-6bf7ac737ba7",
      "name": "Sticky Note14"
    },
    {
      "parameters": {
        "toolDescription": "Get Contacts from Google",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        1344,
        -880
      ],
      "id": "f688bb28-68c5-4344-afaa-4b45bba0bcd8",
      "name": "Get Contact Info"
    },
    {
      "parameters": {
        "operation": "getAll",
        "returnAll": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_All', ``, 'boolean') }}",
        "fields": [
          "emailAddresses",
          "phoneNumbers",
          "addresses"
        ],
        "useQuery": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Use_Query', ``, 'boolean') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleContactsTool",
      "typeVersion": 1,
      "position": [
        1760,
        -720
      ],
      "id": "2d05f120-76ff-481b-a9e0-a4ef393af777",
      "name": "Get many contacts in Google Contacts"
    },
    {
      "parameters": {
        "operation": "get",
        "contactId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Contact_ID', ``, 'string') }}",
        "fields": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Fields', ``, 'string') }}"
      },
      "type": "n8n-nodes-base.googleContactsTool",
      "typeVersion": 1,
      "position": [
        1584,
        -720
      ],
      "id": "c4698e95-890c-4715-af43-b74d5370cebf",
      "name": "Get a contact in Google Contacts"
    },
    {
      "parameters": {
        "toolDescription": "Get flight and hotel information",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {
          "systemMessage": "=Your job is to find flights and/or hotels using the find flights and find hotels tools.\n\nAt the very least, for any query, you'll need departure and arrival locations and and a departure date. If nothing else is provided, assume that it's a one way for one adult.\n\nHere's the variable structure to insert into the URL:\n\n&departure_id={departure_id}&arrival_id={arrival_id}&outbound_date={outbound_date}&return_date={return_date}&currency=USD&hl=en&gl=us&adults={adults}\n\nYou can use the following parameters to construct the URL. Do not send empty parameters\n\ndeparture_id = departing airport code, extrapolate from the city name and use the biggest airport unless specified otherwise.\narrival_id = arrival airport code, extrapolate from the city name and use the biggest airport unless specified otherwise.\noutbound_date\nreturn_date\nadults\nchildren\ninfants_on_lap\ninfants_in_seat\ntravel_class {1 - economy, 2 - premium, 3 - business, 4 - first} pass number only\n\nAdd &type=2 if one way, which is default unless i specify a return date\n\nHotels\n\nAsk about children ages if there are children present and I haven't provided ages. Default is 4 star hotel class and above unless I specify. Rating minimum 4.\n\nHere's the variable structure to insert into the URL\n\n&q=Bali+Resorts&check_in_date=2025-06-05&check_out_date=2025-06-06&adults=2&currency=USD&gl=us&hl=en\n\nYou can use the following parameters to construct the URL. Do not send empty parameters\n\nq = query (eg Hotels in Bali)\ncheck_in_date\ncheck_out_date\nadults\nchildren\nchildren_ages {required if children present, prompt and ask if i dont provide}\nrating { Available options:\n7 - 3.5+\n8 - 4.0+\n9 - 4.5+ }\nhotel_class { 2 - 2-star\n3 - 3-star\n4 - 4-star\n5 - 5-star }\n\nProvide the top 3 options weighted by cost effectiveness and comfort."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        1392,
        32
      ],
      "id": "4ff8608e-9d96-4604-ad2b-7bcad5896f1d",
      "name": "Travel Agent"
    },
    {
      "parameters": {
        "toolDescription": "get flight information",
        "url": "=https://serpapi.com/search?engine=google_flights&{params}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "serpApi",
        "placeholderDefinitions": {
          "values": [
            {
              "name": "{params}",
              "description": "entire parameter string from the system message"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        1312,
        240
      ],
      "id": "0a17890a-153d-46c6-a277-e34c704df5c3",
      "name": "Check Flights"
    },
    {
      "parameters": {
        "toolDescription": "get hotel information",
        "url": "=https://serpapi.com/search?engine=google_hotels&{params}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "serpApi",
        "placeholderDefinitions": {
          "values": [
            {
              "name": "params",
              "description": "entire parameter string from the system message"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        1584,
        240
      ],
      "id": "e9f33df1-45b4-484d-9793-263e1cf2cdc2",
      "name": "Check Hotels"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Add one or more labels to an email message. AI-configurable parameters: Message_ID (string) - the ID of the message to label; Label_Names_or_IDs (string) - comma-separated label names or IDs to apply.",
        "operation": "addLabels",
        "messageId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message_ID', ``, 'string') }}",
        "labelIds": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Label_Names_or_IDs', ``, 'string') }}"
      },
      "id": "8c0bd67a-248a-42a4-8872-15a8b2cc4e44",
      "name": "addLabels1",
      "type": "n8n-nodes-base.gmailTool",
      "position": [
        496,
        -1264
      ],
      "webhookId": "81d61988-8213-4175-b75d-76cb67ce4a3b",
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Delete an email message. AI-configurable parameters: Message_ID (string) - the ID of the message to delete.",
        "operation": "delete",
        "messageId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message_ID', ``, 'string') }}"
      },
      "id": "bd7677d3-62c4-4e21-a3f2-77253ef9fd4f",
      "name": "delete1",
      "type": "n8n-nodes-base.gmailTool",
      "position": [
        224,
        -1424
      ],
      "webhookId": "03319c28-ef88-40f4-897c-f44c21dbdf1f",
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Retrieve details of an email message. AI-configurable parameters: Message_ID (string) - the ID of the message to retrieve.",
        "operation": "get",
        "messageId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message_ID', ``, 'string') }}"
      },
      "id": "74036e87-ae45-403f-ae04-442d96789d36",
      "name": "get1",
      "type": "n8n-nodes-base.gmailTool",
      "position": [
        416,
        -1408
      ],
      "webhookId": "cf5acbf3-a08f-4da6-9f14-9751eed6e5b8",
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Retrieve multiple email messages based on filters. AI-configurable parameters: Return_All (boolean) - whether to return all matching messages; Search (string) - Gmail query string to filter messages; Received_After (string) - datetime (RFC3339) after which messages are received; Received_Before (string) - datetime before which messages are received; Sender (string) - email address of the sender.",
        "operation": "getAll",
        "returnAll": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_All', ``, 'boolean') }}",
        "filters": {
          "q": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Search', ``, 'string') }}",
          "receivedAfter": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Received_After', ``, 'string') }}",
          "receivedBefore": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Received_Before', ``, 'string') }}",
          "sender": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Sender', ``, 'string') }}"
        }
      },
      "id": "78a44b4b-10f8-4628-a454-e1790bd3b1c3",
      "name": "search1",
      "type": "n8n-nodes-base.gmailTool",
      "position": [
        528,
        -1408
      ],
      "webhookId": "cb3d028a-6cab-4946-b368-aa56bf271af9",
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Mark an email message as read. AI-configurable parameters: Message_ID (string) - the ID of the message to mark as read.",
        "operation": "markAsRead",
        "messageId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message_ID', ``, 'string') }}"
      },
      "id": "ac155644-212b-4aee-a94d-5dc5fc44f0db",
      "name": "markAsRead1",
      "type": "n8n-nodes-base.gmailTool",
      "position": [
        64,
        -1264
      ],
      "webhookId": "e769b7cf-9622-434d-b98d-4bde7653238d",
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Mark an email message as unread. AI-configurable parameters: Message_ID (string) - the ID of the message to mark as unread.",
        "operation": "markAsUnread",
        "messageId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message_ID', ``, 'string') }}"
      },
      "id": "bcbc5ef2-45bf-40b8-a2e1-e9ca1a025554",
      "name": "markAsUnread1",
      "type": "n8n-nodes-base.gmailTool",
      "position": [
        224,
        -1264
      ],
      "webhookId": "c26a8635-4329-498e-b293-4350baed493d",
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Reply to an email message. AI-configurable parameters: Message_ID (string) - the ID of the message; Message (string) - the reply content; Attachment_Field_Name (string) - input field name containing attachments; BCC (string) - comma-separated BCC recipients; CC (string) - comma-separated CC recipients.",
        "operation": "reply",
        "messageId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message_ID', ``, 'string') }}",
        "emailType": "text",
        "message": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message', ``, 'string') }}",
        "options": {
          "appendAttribution": false,
          "attachmentsUi": {
            "attachmentsBinary": [
              {
                "property": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Attachment_Field_Name', ``, 'string') }}"
              }
            ]
          },
          "bccList": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('BCC', ``, 'string') }}",
          "ccList": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('CC', ``, 'string') }}"
        }
      },
      "id": "cea6d8c7-e8e4-4503-914a-20113a4b1ee6",
      "name": "reply1",
      "type": "n8n-nodes-base.gmailTool",
      "position": [
        80,
        -1408
      ],
      "webhookId": "fbd30b84-25ac-4bab-8a66-5366b9b7a0be",
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Remove one or more labels from an email message. AI-configurable parameters: Message_ID (string) - the ID of the message; Label_Names_or_IDs (string) - comma-separated label names or IDs to remove.",
        "operation": "removeLabels",
        "messageId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message_ID', ``, 'string') }}",
        "labelIds": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Label_Names_or_IDs', ``, 'string') }}"
      },
      "id": "84b3ffe2-3663-4204-8b14-5a8859af8874",
      "name": "removeLabels1",
      "type": "n8n-nodes-base.gmailTool",
      "position": [
        368,
        -1264
      ],
      "webhookId": "e83fb7ee-2716-444b-9a4e-208eea215728",
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "sendTo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('To', ``, 'string') }}",
        "subject": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Subject', ``, 'string') }}",
        "message": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        336,
        -1136
      ],
      "id": "efad6081-4434-4103-bb35-70503c32370a",
      "name": "Send a message in Gmail",
      "webhookId": "22665ce2-0110-4d53-b3e2-16db4ce7815b"
    },
    {
      "parameters": {
        "toolDescription": "Social Media Calendar Tool",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {
          "systemMessage": "You are a helpful assistant. You have a Get LinkedIn Ideas Tool, a Get Tiktok Ideas Tool, and a Get Instagram Ideas Tool.\n\nYou also have access to Choose Instagram Idea, Choose Tiktok Idea, and Choose LinkedIn Idea - use these to update the chosen records with my chosen framework and generate or reject command.\n\nThe Framework parameter should be passed as Framework 1 Framework 2 or Framework 3\n\nAnd the Status parameter should be passed as Generate Content or Reject"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        352,
        48
      ],
      "id": "b06beb3b-f829-4afb-8150-d0e80a89ded2",
      "name": "Social Media Calendar"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Find Instagram Ideas",
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "app7GtQRtd1vnFEdW",
          "mode": "list",
          "cachedResultName": "Social Automation",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW"
        },
        "table": {
          "__rl": true,
          "value": "tbla6GNwPXjx0yalQ",
          "mode": "list",
          "cachedResultName": "Instagram Ideas",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW/tbla6GNwPXjx0yalQ"
        },
        "filterByFormula": "=AND(\n  Action != \"Reject\",\n  Action != \"Generate Content\"\n)",
        "options": {}
      },
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        544,
        240
      ],
      "id": "de7487d2-2dbf-4d24-b5a9-a750e0023189",
      "name": "Get Instagram Ideas"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Find LinkedIn Ideas",
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "app7GtQRtd1vnFEdW",
          "mode": "list",
          "cachedResultName": "Social Automation",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW"
        },
        "table": {
          "__rl": true,
          "value": "tblHfwIJxk5aJllTO",
          "mode": "list",
          "cachedResultName": "LinkedIn Ideas",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW/tblHfwIJxk5aJllTO"
        },
        "filterByFormula": "=AND(\n  Action != \"Reject\",\n  Action != \"Generate Content\"\n)",
        "returnAll": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_All', ``, 'boolean') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        704,
        240
      ],
      "id": "2e2d851a-aa35-474f-8492-feccf3a17a33",
      "name": "Get LinkedIn Ideas"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Find Tiktok Ideas",
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "app7GtQRtd1vnFEdW",
          "mode": "list",
          "cachedResultName": "Social Automation",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW"
        },
        "table": {
          "__rl": true,
          "value": "tbl0RiS6dwyWmEVwz",
          "mode": "list",
          "cachedResultName": "TikTok Ideas",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW/tbl0RiS6dwyWmEVwz"
        },
        "filterByFormula": "=AND(\n  Action != \"Reject\",\n  Action != \"Generate Content\"\n)",
        "options": {}
      },
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        848,
        240
      ],
      "id": "9997a2c1-f888-43cc-9783-bbcb6a9e4704",
      "name": "Get Tiktok Ideas"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Choose Instagram Ideas",
        "operation": "upsert",
        "base": {
          "__rl": true,
          "value": "app7GtQRtd1vnFEdW",
          "mode": "list",
          "cachedResultName": "Social Automation",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW"
        },
        "table": {
          "__rl": true,
          "value": "tbla6GNwPXjx0yalQ",
          "mode": "list",
          "cachedResultName": "Instagram Ideas",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW/tbla6GNwPXjx0yalQ"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Selected Framework": "={{ $fromAI(\"framework\") }}",
            "Action": "={{ $fromAI(\"action\") }}",
            "URL": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('URL__using_to_match_', ``, 'string') }}"
          },
          "matchingColumns": [
            "URL"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Post ID",
              "displayName": "Post ID",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "URL",
              "displayName": "URL",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": false
            },
            {
              "id": "Post Type",
              "displayName": "Post Type",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Reel",
                  "value": "Reel"
                },
                {
                  "name": "Carousel",
                  "value": "Carousel"
                }
              ],
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Number of Slides",
              "displayName": "Number of Slides",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Caption",
              "displayName": "Caption",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Script",
              "displayName": "Script",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Viral Score",
              "displayName": "Viral Score",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Primary Strengths",
              "displayName": "Primary Strengths",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Idea Framework 1",
              "displayName": "Idea Framework 1",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Idea Framework 2",
              "displayName": "Idea Framework 2",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Idea Framework 3",
              "displayName": "Idea Framework 3",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Selected Framework",
              "displayName": "Selected Framework",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Framework 1",
                  "value": "Framework 1"
                },
                {
                  "name": "Framework 2",
                  "value": "Framework 2"
                },
                {
                  "name": "Framework 3",
                  "value": "Framework 3"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Action",
              "displayName": "Action",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Generate Content",
                  "value": "Generate Content"
                },
                {
                  "name": "Reject",
                  "value": "Reject"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Last Modified",
              "displayName": "Last Modified",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        80,
        240
      ],
      "id": "11f3213c-1c43-43db-8fb1-48b6934b6601",
      "name": "Choose Instagram Idea"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Choose LinkedIn Ideas",
        "operation": "upsert",
        "base": {
          "__rl": true,
          "value": "app7GtQRtd1vnFEdW",
          "mode": "list",
          "cachedResultName": "Social Automation",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW"
        },
        "table": {
          "__rl": true,
          "value": "tbla6GNwPXjx0yalQ",
          "mode": "list",
          "cachedResultName": "Instagram Ideas",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW/tbla6GNwPXjx0yalQ"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Selected Framework": "={{ $fromAI(\"framework\") }}",
            "Action": "={{ $fromAI(\"action\") }}",
            "URL": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('URL__using_to_match_', ``, 'string') }}"
          },
          "matchingColumns": [
            "URL"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Post ID",
              "displayName": "Post ID",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "URL",
              "displayName": "URL",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": false
            },
            {
              "id": "Post Type",
              "displayName": "Post Type",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Reel",
                  "value": "Reel"
                },
                {
                  "name": "Carousel",
                  "value": "Carousel"
                }
              ],
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Number of Slides",
              "displayName": "Number of Slides",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Caption",
              "displayName": "Caption",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Script",
              "displayName": "Script",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Viral Score",
              "displayName": "Viral Score",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Primary Strengths",
              "displayName": "Primary Strengths",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Idea Framework 1",
              "displayName": "Idea Framework 1",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Idea Framework 2",
              "displayName": "Idea Framework 2",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Idea Framework 3",
              "displayName": "Idea Framework 3",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Selected Framework",
              "displayName": "Selected Framework",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Framework 1",
                  "value": "Framework 1"
                },
                {
                  "name": "Framework 2",
                  "value": "Framework 2"
                },
                {
                  "name": "Framework 3",
                  "value": "Framework 3"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Action",
              "displayName": "Action",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Generate Content",
                  "value": "Generate Content"
                },
                {
                  "name": "Reject",
                  "value": "Reject"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Last Modified",
              "displayName": "Last Modified",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        240,
        240
      ],
      "id": "9ca104d4-30f0-4e11-9fbd-3879efdd1076",
      "name": "Choose LinkedIn Ideas"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Choose Tiktok Idea",
        "operation": "upsert",
        "base": {
          "__rl": true,
          "value": "app7GtQRtd1vnFEdW",
          "mode": "list",
          "cachedResultName": "Social Automation",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW"
        },
        "table": {
          "__rl": true,
          "value": "tbla6GNwPXjx0yalQ",
          "mode": "list",
          "cachedResultName": "Instagram Ideas",
          "cachedResultUrl": "https://airtable.com/app7GtQRtd1vnFEdW/tbla6GNwPXjx0yalQ"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Selected Framework": "={{ $fromAI(\"framework\") }}",
            "Action": "={{ $fromAI(\"action\") }}",
            "URL": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('URL__using_to_match_', ``, 'string') }}"
          },
          "matchingColumns": [
            "URL"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Post ID",
              "displayName": "Post ID",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "URL",
              "displayName": "URL",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": false
            },
            {
              "id": "Post Type",
              "displayName": "Post Type",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Reel",
                  "value": "Reel"
                },
                {
                  "name": "Carousel",
                  "value": "Carousel"
                }
              ],
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Number of Slides",
              "displayName": "Number of Slides",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Caption",
              "displayName": "Caption",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Script",
              "displayName": "Script",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Viral Score",
              "displayName": "Viral Score",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Primary Strengths",
              "displayName": "Primary Strengths",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Idea Framework 1",
              "displayName": "Idea Framework 1",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Idea Framework 2",
              "displayName": "Idea Framework 2",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Idea Framework 3",
              "displayName": "Idea Framework 3",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Selected Framework",
              "displayName": "Selected Framework",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Framework 1",
                  "value": "Framework 1"
                },
                {
                  "name": "Framework 2",
                  "value": "Framework 2"
                },
                {
                  "name": "Framework 3",
                  "value": "Framework 3"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Action",
              "displayName": "Action",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Generate Content",
                  "value": "Generate Content"
                },
                {
                  "name": "Reject",
                  "value": "Reject"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Last Modified",
              "displayName": "Last Modified",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        384,
        240
      ],
      "id": "6591e5ce-b143-4c4d-9b4b-cbeedb4bf397",
      "name": "Choose Tiktok Idea"
    },
    {
      "parameters": {
        "folderId": "default",
        "title": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Title', ``, 'string') }}"
      },
      "type": "n8n-nodes-base.googleDocsTool",
      "typeVersion": 2,
      "position": [
        -352,
        -688
      ],
      "id": "ee6d9d20-0b11-40e0-bd3c-9cb488c44525",
      "name": "Create a document in Google Docs"
    },
    {
      "parameters": {
        "operation": "update",
        "documentURL": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Doc_ID_or_URL', ``, 'string') }}",
        "simple": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Simplify', ``, 'boolean') }}",
        "actionsUi": {
          "actionFields": [
            {
              "action": "insert",
              "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('actionFields0_Text', ``, 'string') }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.googleDocsTool",
      "typeVersion": 2,
      "position": [
        -192,
        -688
      ],
      "id": "6fee90b5-e152-4284-8a2a-66206f0d59ff",
      "name": "Update a document in Google Docs"
    },
    {
      "parameters": {
        "operation": "get",
        "documentURL": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Doc_ID_or_URL', ``, 'string') }}",
        "simple": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Simplify', ``, 'boolean') }}"
      },
      "type": "n8n-nodes-base.googleDocsTool",
      "typeVersion": 2,
      "position": [
        -544,
        -688
      ],
      "id": "706de1d0-2360-4ba9-a240-d7a8830dd467",
      "name": "Get a document"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger1').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "Markdown"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        848,
        -2352
      ],
      "id": "f6cf88cc-07b3-4030-8680-07a53508cd67",
      "name": "Send a text message",
      "webhookId": "aec94a2e-a0b1-4d58-b957-59cd84341373"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        496,
        -2416
      ],
      "id": "ac8eac8e-2864-46ef-969c-d826f7d38e98",
      "name": "OpenAI"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "79308d08-eb8b-42af-a350-100ccb56dea1",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "aa713a2a-0c8e-4dc7-95fa-2b45d7b2919f",
                    "leftValue": "={{ $json.message.voice }}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Voice"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        656,
        -2592
      ],
      "id": "6e906d86-1663-44fb-b5d5-039eb440a883",
      "name": "Check Data Type"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $('Telegram Trigger1').item.json.message.voice.file_id }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        816,
        -2544
      ],
      "id": "058295d0-ba3a-458b-9f41-4e4424ac3513",
      "name": "Download Audio",
      "webhookId": "e582ca1b-8031-4189-849d-003f646876e5"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e997b462-3fec-4b74-adc0-909978bf7681",
              "name": "prompt",
              "value": "= {{ $('Telegram Trigger1').item.json.message.text }} {{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        368,
        -2256
      ],
      "id": "79c70987-9b86-439f-98be-4e041af9bca0",
      "name": "Combine fields"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e53859ef-a47b-4819-9c65-d0838c6c8d50",
              "leftValue": "={{ $json.message.chat.id }}",
              "rightValue": 5675741296,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        512,
        -2592
      ],
      "id": "f6af5f48-9aa8-487c-a216-bb0d275f5234",
      "name": "Filter"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger1').item.json.message.chat.id }}",
        "contextWindowLength": 7
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -480,
        240
      ],
      "id": "c86ea385-7dcd-400d-a011-47c65cd15f84",
      "name": "Postgres Chat Memory"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -176,
        32
      ],
      "id": "6513aebd-1de1-4548-95c5-18e775f63f58",
      "name": "GPT-4.1"
    },
    {
      "parameters": {
        "content": "",
        "height": 608,
        "width": 688
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        288,
        -2640
      ],
      "typeVersion": 1,
      "id": "fbcdb433-2a8d-4316-b7e0-f3142b498af9",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger1').item.json.message.chat.id }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -176,
        240
      ],
      "id": "45b8e7ad-4ccd-4f6b-aebd-d32db433a985",
      "name": "Simple Memory1"
    },
    {
      "parameters": {
        "content": "## Research Assistant",
        "height": 432,
        "width": 864,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1120,
        -496
      ],
      "typeVersion": 1,
      "id": "0c629b32-60db-4b26-92a6-170f1986159d",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "content": "## Document Creator and Reporting Agent",
        "height": 144,
        "width": 608
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -576,
        -720
      ],
      "typeVersion": 1,
      "id": "305c6c04-bfae-4e5a-8a99-f69261b32a58",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "content": "## Calendar Agent\n",
        "height": 464,
        "width": 720,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -576,
        -544
      ],
      "typeVersion": 1,
      "id": "251a626b-a6be-4e9b-9313-27c3f11df27f",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "content": "## Email Agent\n",
        "height": 608,
        "width": 608,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        16,
        -1616
      ],
      "typeVersion": 1,
      "id": "b12d5063-efb6-49fd-8c15-a9ab07e88571",
      "name": "Sticky Note15"
    },
    {
      "parameters": {
        "content": "## Content Creation Agent\n",
        "height": 608,
        "width": 1296
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        672,
        -1616
      ],
      "typeVersion": 1,
      "id": "2fab46f2-6ef3-4c2d-a851-f01db21c13f0",
      "name": "Sticky Note16"
    },
    {
      "parameters": {
        "content": "## Content Planner Agent\n",
        "height": 416,
        "width": 960,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        16,
        -16
      ],
      "typeVersion": 1,
      "id": "c167534b-9c8f-46c6-a447-b77925fd9d17",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "content": "## Finance Tracker",
        "height": 416,
        "width": 544,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -576,
        -1616
      ],
      "typeVersion": 1,
      "id": "e11d74ef-3ac7-424f-baca-003323e79349",
      "name": "Sticky Note18"
    },
    {
      "parameters": {
        "content": "## Weather and News Agent",
        "height": 416,
        "width": 544,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -576,
        -1168
      ],
      "typeVersion": 1,
      "id": "4ea98547-d80a-4cff-9e65-47e66b22e6c4",
      "name": "Sticky Note19"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1.1,
      "position": [
        -336,
        32
      ],
      "id": "c6108c2c-3e24-4b88-b52c-32841170a786",
      "name": "Think1"
    },
    {
      "parameters": {
        "toolDescription": "Calendar Tool",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {
          "systemMessage": "=The current date is {{ $now }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        -544,
        -432
      ],
      "id": "07e5bf0a-bd11-4877-8a2a-c13229e31c8f",
      "name": "Calendar Agent2"
    },
    {
      "parameters": {
        "content": "## Contacts Agent\n",
        "height": 416,
        "width": 848,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1120,
        -944
      ],
      "typeVersion": 1,
      "id": "d1f331e9-5525-4a88-bc90-ca742001c111",
      "name": "Sticky Note20"
    },
    {
      "parameters": {
        "content": "## AI Stack",
        "height": 416,
        "width": 544,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -576,
        -16
      ],
      "typeVersion": 1,
      "id": "e4f1b031-cae2-4478-9d58-38da8907b137",
      "name": "Sticky Note21"
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        336,
        -2592
      ],
      "id": "f67a0348-3b12-4b6f-9023-b668a921dd4d",
      "name": "Telegram Trigger1",
      "webhookId": "1f9dbd4f-178e-4f2f-9a4c-d2ecd283ef85"
    }
  ],
  "pinData": {},
  "connections": {
    "Send Email": {
      "ai_tool": [
        [
          {
            "node": "Email Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Email Reply": {
      "ai_tool": [
        [
          {
            "node": "Email Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Label Emails": {
      "ai_tool": [
        [
          {
            "node": "Email Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "4.1-mini": {
      "ai_languageModel": [
        [
          {
            "node": "Email Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Create Event with Attendee": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Event": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Events": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Delete Event": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update Event": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "4.1-mini1": {
      "ai_languageModel": [
        [
          {
            "node": "Calendar Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Ultimate Assistant": {
      "main": [
        [
          {
            "node": "Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Email Agent": {
      "ai_tool": [
        [
          {
            "node": "Ultimate Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calendar Agent": {
      "ai_tool": [
        [
          {
            "node": "Ultimate Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GPT 4.1": {
      "ai_languageModel": [
        [
          {
            "node": "Ultimate Assistant",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set 'Text'": {
      "main": [
        [
          {
            "node": "Ultimate Assistant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Voice File": {
      "main": [
        [
          {
            "node": "Transcribe Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe Audio": {
      "main": [
        [
          {
            "node": "Ultimate Assistant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Download Voice File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set 'Text'",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Orchestrator Agent": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Research Agent": {
      "ai_tool": [
        [
          {
            "node": "Orchestrator Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Blog Post Writer",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Tavily Research": {
      "ai_tool": [
        [
          {
            "node": "Research Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Message a model in Perplexity": {
      "ai_tool": [
        [
          {
            "node": "Research Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "In-Depth Research Tool": {
      "ai_tool": [
        [
          {
            "node": "Research Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Message a model in Perplexity1": {
      "ai_tool": [
        [
          {
            "node": "In-Depth Research Tool",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Blog Post Writer",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Titles and Structure Tool": {
      "ai_tool": [
        [
          {
            "node": "Blog Post Writer",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Perplexity Tool": {
      "ai_tool": [
        [
          {
            "node": "Titles and Structure Tool",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Write Section Tool": {
      "ai_tool": [
        [
          {
            "node": "Blog Post Writer",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Generate Image": {
      "ai_tool": [
        [
          {
            "node": "Generate Image Tool",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Check Status": {
      "ai_tool": [
        [
          {
            "node": "Generate Image Tool",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Generate Image Tool": {
      "ai_tool": [
        [
          {
            "node": "Blog Post Writer",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Autocomplete Suggestions": {
      "ai_tool": [
        [
          {
            "node": "Titles and Structure Tool",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Blog Post Writer": {
      "ai_tool": [
        [
          {
            "node": "Orchestrator Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Search Entries": {
      "ai_tool": [
        [
          {
            "node": "Finance Tracker Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Entry": {
      "ai_tool": [
        [
          {
            "node": "Finance Tracker Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Finance Tracker Agent": {
      "ai_tool": [
        [
          {
            "node": "Orchestrator Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Weather and News Agent": {
      "ai_tool": [
        [
          {
            "node": "Orchestrator Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GPT-5-Nano": {
      "ai_languageModel": [
        [
          {
            "node": "Weather and News Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Calendar Agent2",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Titles and Structure Tool",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Generate Image Tool",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Get Contact Info",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Travel Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Social Media Calendar",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "SERPapi news": {
      "ai_tool": [
        [
          {
            "node": "Weather and News Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Weather": {
      "ai_tool": [
        [
          {
            "node": "Weather and News Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create an event in Google Calendar": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent2",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Delete an event in Google Calendar": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent2",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get many events in Google Calendar": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent2",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get an event in Google Calendar": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent2",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update an event in Google Calendar": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent2",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Email Management Agent": {
      "ai_tool": [
        [
          {
            "node": "Orchestrator Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Contact Info": {
      "ai_tool": [
        [
          {
            "node": "Orchestrator Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get many contacts in Google Contacts": {
      "ai_tool": [
        [
          {
            "node": "Get Contact Info",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get a contact in Google Contacts": {
      "ai_tool": [
        [
          {
            "node": "Get Contact Info",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Travel Agent": {
      "ai_tool": [
        [
          {
            "node": "Orchestrator Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Check Flights": {
      "ai_tool": [
        [
          {
            "node": "Travel Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Check Hotels": {
      "ai_tool": [
        [
          {
            "node": "Travel Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "addLabels1": {
      "ai_tool": [
        [
          {
            "node": "Email Management Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "delete1": {
      "ai_tool": [
        [
          {
            "node": "Email Management Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get1": {
      "ai_tool": [
        [
          {
            "node": "Email Management Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "search1": {
      "ai_tool": [
        [
          {
            "node": "Email Management Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "markAsRead1": {
      "ai_tool": [
        [
          {
            "node": "Email Management Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "markAsUnread1": {
      "ai_tool": [
        [
          {
            "node": "Email Management Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "reply1": {
      "ai_tool": [
        [
          {
            "node": "Email Management Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "removeLabels1": {
      "ai_tool": [
        [
          {
            "node": "Email Management Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Send a message in Gmail": {
      "ai_tool": [
        [
          {
            "node": "Email Management Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Social Media Calendar": {
      "ai_tool": [
        [
          {
            "node": "Orchestrator Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Instagram Ideas": {
      "ai_tool": [
        [
          {
            "node": "Social Media Calendar",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get LinkedIn Ideas": {
      "ai_tool": [
        [
          {
            "node": "Social Media Calendar",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Tiktok Ideas": {
      "ai_tool": [
        [
          {
            "node": "Social Media Calendar",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Choose Instagram Idea": {
      "ai_tool": [
        [
          {
            "node": "Social Media Calendar",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Choose LinkedIn Ideas": {
      "ai_tool": [
        [
          {
            "node": "Social Media Calendar",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Choose Tiktok Idea": {
      "ai_tool": [
        [
          {
            "node": "Social Media Calendar",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create a document in Google Docs": {
      "ai_tool": [
        [
          {
            "node": "Orchestrator Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update a document in Google Docs": {
      "ai_tool": [
        [
          {
            "node": "Orchestrator Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get a document": {
      "ai_tool": [
        [
          {
            "node": "Orchestrator Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Combine fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Data Type": {
      "main": [
        [
          {
            "node": "Combine fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Audio": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine fields": {
      "main": [
        [
          {
            "node": "Orchestrator Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Check Data Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Orchestrator Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "GPT-4.1": {
      "ai_languageModel": [
        [
          {
            "node": "Orchestrator Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Research Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "In-Depth Research Tool",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Finance Tracker Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Email Management Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Write Section Tool",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory1": {
      "ai_memory": [
        [
          {
            "node": "Blog Post Writer",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Email Management Agent",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Finance Tracker Agent",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Travel Agent",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Social Media Calendar",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Think1": {
      "ai_tool": [
        [
          {
            "node": "Orchestrator Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calendar Agent2": {
      "ai_tool": [
        [
          {
            "node": "Orchestrator Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger1": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "9a5e08a1-c308-4600-96c6-cef63de5d1e7",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "9ff4b997319de8b36f3ec9da7971f29ebdff0b93b4afaf4fcaed05164719d3b2"
  },
  "id": "biICZqevKQnESFBB",
  "tags": []
}